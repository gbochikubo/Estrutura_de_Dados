#include <iostream>
#include <string>
#include <cstdlib>

using namespace std;

const int primo = 13;

int funcaoHash(string s, int M){
    
    long h;
    for(unsigned int i = 0; i < s.length(); i ++){
        
        h = (primo * h + s[i])%M;
    }
    return h;
}

class noh{
    friend class hash;
    private :
        noh * proximo;
        string chave;
        string valor;
    public:
        noh();
};

noh :: noh(){
    this -> proximo = NULL;
    this -> chave = " ";
    this -> valor = " ";
}

class hash{
    private:
        noh** elemento;
        int capacidade;
    public:
        hash(int cap);
        ~hash();
        void insere(string v, string c);
        void imprime();
};

hash :: hash (int cap){
    this -> elemento = NULL;
    this -> capacidade = cap;
}

hash :: ~hash(){
    
    for(int i = 0; i < capacidade; i++){
        noh* atual = elemento[i];
        while(atual != NULL){
            noh* aux = atual;
            atual = atual->proximo;
            delete aux;
        }
    }
    delete [] elemento;
}

void hash :: insere(string v, string c){
    
    int h;
    h = funcaoHash(c, capacidade);
    
    if (elemento[h] == NULL){
        noh* elemento = new noh;
        elemento->chave = c;
        elemento->valor = v;
    }
    else {
        noh* atual = elemento[h];
        while (atual -> proximo != NULL){
            atual = atual->proximo;
        }
        noh* novo = new noh;
        novo->chave = c;
        novo->valor = v;
        atual->proximo = novo;
    }
}

void hash :: imprime(){
    
    for(int i = 0; i < capacidade; i++){
        noh* atual = elemento[i];
        while(atual->proximo != NULL){
            cout << "[ " << atual->chave << "/" << atual->valor << " ] --> NULL" << endl;
            atual = atual->proximo;
        }
    }
}
        

int main (){
    
    hash tabela(3);
    tabela.insere("gui","mama eu");
    tabela.insere("wagner","fumante");
    tabela.insere("leo","viadao");
    tabela.imprime();
    
    return  0;
}
    
